name: AoC CMake C++ Part

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BUILD_DIR: build
  INSTALL_PREFIX: build/install
jobs:
  downloadInput:
    uses: ./.github/workflows/AoC_Download.yml
    secrets:
      AOC_SESSION_COOKIE: ${{secrets.AOC_SESSION_COOKIE}}

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            preset: "unix-release"
          - os: windows-latest
            preset: "windows-gcc-release"

    runs-on: ${{ matrix.os }}
    needs: downloadInput
    steps:
      - uses: actions/checkout@v4

      - name: Download input
        uses: actions/download-artifact@v4
        with:
          name: AoC_Input
          path: |
            ./

      - name: Restore CMake build files
        id: cache-cmake
        uses: actions/cache@v4
        with:
          path: ${{ env.BUILD_DIR }}
          key: cmake-${{ matrix.os }}-${{ matrix.preset }}-${{ hashFiles('**/CMakeLists.txt', '**/*.cc', '**/*.h', '**/*.hpp') }}

      - name: Run cmake configure
        if: steps.cache-cmake.outputs.cache-hit != 'true'
        id: cmake-configure
        run: |
          cmake --preset=${{ matrix.preset }}

      - name: Run cmake build
        if: steps.cache-cmake.outputs.cache-hit != 'true'
        run: |
          cmake --build --preset=${{ matrix.preset }}
        
      - name: Run cmake install
        if: steps.cache-cmake.outputs.cache-hit != 'true'
        working-directory: ${{ env.BUILD_DIR }}/${{ matrix.preset }}
        run: |
          cmake --install .

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: BINARY-${{ matrix.os }}
          path: |
            ${{ env.INSTALL_PREFIX }}/${{ matrix.preset }}

  run:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        year: [AoC/Cpp/2024]
    runs-on: ${{ matrix.os }}
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: BINARY-${{ matrix.os }}
          path: |
            .
  
      - name: Generate results log files (linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        working-directory: ${{ matrix.year }}
        shell: bash
        run: |
          chmod u+x ./solution
          ./solution 1>actionRes.log 2>runtime.log

      - name: Generate results log files (windows)
        if: ${{ matrix.os == 'windows-latest' }}
        working-directory: ${{ matrix.year }}
        shell: cmd
        run: |
          .\solution 1>actionRes.log 2>runtime.log 
          
      - name: LogResults
        shell: bash
        working-directory: ${{ matrix.year }}
        run: |
          cat actionRes.log
          cat runtime.log

      - name: Diff files
        shell: bash
        run: |
          sh ./.github/workflows/diff_file.sh ${{ matrix.year }}/actionRes.log Cpp/2024/main/year2024/res.log

  report-if-diff-fail:
    runs-on: ubuntu-latest
    needs: run
    if: ${{ failure() }}
    steps:
      - run: |
          echo "FAILED"
